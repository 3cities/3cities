name: production release
on:
  push:
    branches:
      - main
jobs:
  verify-build:
    runs-on: ubuntu-latest
    steps:
      - uses: 3cities/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # check out code for actions/verify-build
      - uses: ./.github/actions/verify-build
  tag:
    needs: [verify-build] # create a new version and tag if only if build is verified
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.github-tag-action.outputs.new_tag }}
      changelog: ${{ steps.github-tag-action.outputs.changelog }}
    steps:
      - uses: 3cities/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
      - name: Bump version and push tag
        id: github-tag-action
        uses: 3cities/github-tag-action@86a7b93c90a7fb79fca2911075262fb781c9136a
        with:
          release_branches: main
  release:
    needs: [tag]
    if: ${{ needs.tag.outputs.new_tag != null }}
    runs-on: ubuntu-latest
    steps:
      - uses: 3cities/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # check out code for actions/setup
      - uses: ./.github/actions/setup
      - run: yarn build
        env:
          REACT_APP_GIT_TAG: ${{ needs.tag.outputs.new_tag }}
          REACT_APP_ALCHEMY_API_KEY: ${{ secrets.REACT_APP_ALCHEMY_API_KEY }}
          REACT_APP_INFURA_API_KEY: ${{ secrets.REACT_APP_INFURA_API_KEY }}
          REACT_APP_WEB3AUTH_CLIENT_ID: ${{ secrets.REACT_APP_WEB3AUTH_CLIENT_ID }}
          REACT_APP_WALLETCONNECT_PROJECT_ID: ${{ secrets.REACT_APP_WALLETCONNECT_PROJECT_ID }}
      # - run: touch ./packages/react-app/build/static/fake-source.map # uncomment this to test source map detection and trigger a release workflow failure
      - run: (find ./packages/react-app/build | grep "map$" || exit 0 && (echo "unexpectedly found a source map in the build directory, failing release build" && exit 1);) # sanity check to ensure sourcemaps are disabled in production build to avoid leaking our web src
      - name: Pin to IPFS on NFT.Storage # NFT.Storage is recommended by cloudflare as the pinning service that's the most quickly ingested by cloudflare ipfs gateways
        id: nft-storage
        uses: 3cities/ipfs-action@19879f7df881441a7f1ae2257b63674fa33b8f26
        with:
          path: ./packages/react-app/build
          service: nft.storage
          nftStorageApiKey: ${{ secrets.NFT_STORAGE_API_KEY }}
      - name: Update DNS with new IPFS hash
        env:
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
          RECORD_DOMAIN: '3cities.xyz'
          RECORD_NAME: '_dnslink'
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        uses: 3cities/cloudflare-update-dnslink@30414a408191218c8259e932ebdf4cbb7c652fe8
        with:
          cid: ${{ steps.nft-storage.outputs.hash }}
      - name: Release
        uses: 3cities/release-action@a5996b3a733af99dce9d614dc1d70412e81735c7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ needs.tag.outputs.new_tag }}
          name: Release ${{ needs.tag.outputs.new_tag }}
          body: |
            IPFS hash of the deployment:
            - CIDv1: `${{ steps.nft-storage.outputs.hash }}`

            The latest release is always accessible via our alias to the Cloudflare IPFS gateway at [3cities.xyz](https://3cities.xyz).

            You can also access the 3cities interface directly from an IPFS gateway.
            **BEWARE**: the 3cities interface uses [`localStorage`](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage) to remember your settings, such as which tokens you have imported.
            **You should always use an IPFS gateway that enforces origin separation**, or our alias to the latest release at [3cities.xyz](https://3cities.xyz).
            Your 3cities settings are never remembered across different URLs.

            IPFS gateways:
            - https://${{ steps.nft-storage.outputs.hash }}.ipfs.dweb.link/
            - https://${{ steps.nft-storage.outputs.hash }}.ipfs.cf-ipfs.com/
            - [ipfs://${{ steps.nft-storage.outputs.hash }}/](ipfs://${{ steps.nft-storage.outputs.hash }}/)

            ${{ needs.tag.outputs.changelog }}
